{
    "name": "eide",
    "displayName": "Embedded IDE",
    "publisher": "cl",
    "author": {
        "name": "cl",
        "email": "2584456014@qq.com"
    },
    "keywords": [
        "arm",
        "cortex-m",
        "armcc",
        "gcc",
        "risc-v",
        "riscv",
        "stm32",
        "c51",
        "8051",
        "mcs51",
        "stm8",
        "sdcc",
        "eide",
        "embedded"
    ],
    "homepage": "https://github.com/github0null/eide/blob/master/README.md",
    "license": "MIT",
    "description": "A singlechip development environment for 8051/STM8/Cortex-M/RISC-V",
    "version": "2.5.6",
    "engines": {
        "vscode": "^1.38.0"
    },
    "categories": [
        "Programming Languages",
        "Other",
        "Snippets"
    ],
    "activationEvents": [
        "*"
    ],
    "icon": "res/icon/icon.png",
    "main": "./dist/extension.js",
    "readme": "https://github.com/github0null/eide/blob/master/README.md",
    "bugs": {
        "url": "https://github.com/github0null/eide/issues",
        "email": "2584456014@qq.com"
    },
    "os": [
        "win32"
    ],
    "repository": {
        "url": "https://github.com/github0null/eide.git",
        "type": "git"
    },
    "scripts": {
        "vscode:prepublish": "webpack --mode production",
        "webpack": "webpack --mode development",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test"
    },
    "devDependencies": {
        "@types/ftp": "^0.3.31",
        "@types/iconv-lite": "0.0.1",
        "@types/ini": "^1.3.30",
        "@types/mocha": "^5.2.7",
        "@types/node": "^12.12.17",
        "@types/vscode": "^1.38.0",
        "@types/x2js": "^3.1.0",
        "ts-loader": "^6.2.1",
        "tslint": "^5.20.1",
        "typescript": "^3.7.3",
        "webpack": "^4.42.0",
        "webpack-cli": "^3.3.11"
    },
    "dependencies": {
        "iconv-lite": "^0.5.0",
        "ini": "^2.0.0",
        "jsonc": "^2.0.0",
        "x2js": "^3.3.1",
        "yaml": "^1.10.2"
    },
    "contributes": {
        "configuration": [
            {
                "title": "Embedded IDE",
                "properties": {
                    "EIDE.Builder.ThreadNumber": {
                        "type": "integer",
                        "scope": "resource",
                        "markdownDescription": "The number of threads when build",
                        "default": -1,
                        "enum": [
                            -1,
                            1,
                            2,
                            4,
                            6,
                            8,
                            10,
                            12,
                            14,
                            16,
                            18,
                            20,
                            22,
                            24,
                            26,
                            28,
                            30,
                            32
                        ],
                        "enumDescriptions": [
                            "auto",
                            "not use multi-thread mode"
                        ]
                    },
                    "EIDE.Option.ShowToolbarInEditerTitle": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "Displays some toolbars in the editor title",
                        "default": true
                    },
                    "EIDE.Option.PrintRelativePathWhenBuild": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "Print relative path when compile source file",
                        "default": true
                    },
                    "EIDE.Option.CreateBatchFile": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "Create batch file after build",
                        "default": false
                    },
                    "EIDE.Option.UseTaskToBuild": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "Use Task to build project instead of Terminal",
                        "default": true
                    },
                    "EIDE.Option.InsertExtraCommandsAtBegin": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "The built-in command lines will insert at the beginning of the `beforeBuildTasks / afterBuildTasks`",
                        "default": false
                    },
                    "EIDE.Template.Repository.UseProxy": {
                        "type": "boolean",
                        "scope": "machine",
                        "markdownDescription": "Use github proxy to improve network speed (experimental function)",
                        "default": true
                    },
                    "EIDE.Template.Repository.Url": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "remote public github repository url, format: `<user_name>`/`<repository_name>`/contents/`<directory_path>`",
                        "default": "github0null/eide-doc/contents/eide-template-list"
                    },
                    "EIDE.SerialPortMonitor.DefaultPort": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "Default port name",
                        "default": "null"
                    },
                    "EIDE.SerialPortMonitor.ShowStatusBar": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "Show serialport status bar",
                        "default": true
                    },
                    "EIDE.SerialPortMonitor.useUnixLF": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "Use Unix New Line Char",
                        "default": false
                    },
                    "EIDE.SerialPortMonitor.BaudRate": {
                        "type": "integer",
                        "scope": "resource",
                        "markdownDescription": "SerialPort Baud Rate",
                        "default": 115200
                    },
                    "EIDE.SerialPortMonitor.DataBits": {
                        "type": "integer",
                        "scope": "resource",
                        "markdownDescription": "SerialPort Data Bits width",
                        "default": 8
                    },
                    "EIDE.SerialPortMonitor.Parity": {
                        "type": "integer",
                        "scope": "resource",
                        "markdownDescription": "SerialPort Parity bit",
                        "default": 0,
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4
                        ],
                        "enumDescriptions": [
                            "None",
                            "Odd",
                            "Even",
                            "Mark",
                            "Space"
                        ]
                    },
                    "EIDE.SerialPortMonitor.StopBits": {
                        "type": "integer",
                        "scope": "resource",
                        "markdownDescription": "SerialPort Stop Bits",
                        "default": 1,
                        "enum": [
                            1,
                            2,
                            3
                        ],
                        "enumDescriptions": [
                            "One",
                            "Two",
                            "OnePointFive"
                        ]
                    },
                    "EIDE.IAR.STM8.InstallDirectory": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "IAR for STM8 install directory [`example: D:\\IAR`]",
                        "default": ""
                    },
                    "EIDE.ARM.GCC.Prefix": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "ARM GCC toolchain prefix [`example: arm-none-eabi-`]",
                        "default": "arm-none-eabi-"
                    },
                    "EIDE.ARM.GCC.InstallDirectory": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "GCC for ARM toolchain install directory [`example: D:\\arm-gcc\\8 2019-q3-update`]",
                        "default": ""
                    },
                    "EIDE.ARM.INI.Path": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "Keil ARM MDK `TOOLS.INI` file path [`example: C:\\Keil_v5\\TOOLS.INI`]",
                        "default": "C:\\Keil_v5\\TOOLS.INI"
                    },
                    "EIDE.ARM.JLink.ToolDirectory": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "JLink install directory [`example: C:\\Program Files (x86)\\SEGGER\\JLink`]",
                        "default": ""
                    },
                    "EIDE.ARM.OpenOCD.ExePath": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "OpenOCD.exe path [`example: D:\\OpenOCD\\bin\\openocd.exe`]",
                        "default": ""
                    },
                    "EIDE.ARM.StlinkExePath": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "ST-LINK Utility: `ST-LINK_CLI.exe` path",
                        "default": ""
                    },
                    "EIDE.ARM.Option.AutoGenerateRTE_Components": {
                        "type": "boolean",
                        "scope": "resource",
                        "description": "Auto Generate RTE_Components.h",
                        "default": true
                    },
                    "EIDE.ARM.Option.AxfToElf": {
                        "type": "boolean",
                        "scope": "resource",
                        "markdownDescription": "Convert `.axf` to `.elf` for ARMCC compiler",
                        "default": true
                    },
                    "EIDE.STM8.STVP.CliExePath": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "STVP: `STVP_CmdLine.exe` path",
                        "default": ""
                    },
                    "EIDE.C51.INI.Path": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "Keil C51 `TOOLS.INI` file path [`example: C:\\Keil_v5\\C51\\TOOLS.INI`]",
                        "default": "C:\\Keil_v5\\C51\\TOOLS.INI"
                    },
                    "EIDE.SDCC.InstallDirectory": {
                        "type": "string",
                        "scope": "machine",
                        "markdownDescription": "SDCC install folder [`example: C:\\Program Files (x86)\\SDCC`]",
                        "default": ""
                    },
                    "EIDE.RISCV.InstallDirectory": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "RISC-V toolchain install folder [`example: D:\\xpack-riscv-none-embed-gcc-8.3.0-2.3`]",
                        "default": ""
                    },
                    "EIDE.RISCV.ToolPrefix": {
                        "type": "string",
                        "scope": "resource",
                        "markdownDescription": "RISC-V toolchain prefix",
                        "default": "riscv-none-embed-"
                    }
                }
            }
        ],
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "EIDEView",
                    "title": "EIDE",
                    "icon": "./res/icon/activitybar.svg"
                }
            ]
        },
        "views": {
            "EIDEView": [
                {
                    "id": "Project",
                    "name": "EIDE Projects"
                },
                {
                    "id": "Operation",
                    "name": "Operations"
                }
            ]
        },
        "commands": [
            {
                "command": "_project.source.filesystem_folder_add_file",
                "title": "New File"
            },
            {
                "command": "_project.source.filesystem_folder_add",
                "title": "New Folder"
            },
            {
                "command": "_project.source.virtual_folder_add_file",
                "title": "Add File"
            },
            {
                "command": "_project.source.virtual_folder_add",
                "title": "Add Folder"
            },
            {
                "command": "_project.source.virtual_folder_remove",
                "title": "Remove"
            },
            {
                "command": "_project.source.virtual_file_remove",
                "title": "Remove"
            },
            {
                "command": "_project.source.virtual_folder_rename",
                "title": "Rename"
            },
            {
                "command": "_project.refresh",
                "title": "Refresh",
                "icon": {
                    "dark": "./res/icon/refresh-dark.svg",
                    "light": "./res/icon/refresh-light.svg"
                }
            },
            {
                "command": "_project.sourceRoot.refresh",
                "title": "Refresh Folder",
                "icon": {
                    "dark": "./res/icon/refresh-dark.svg",
                    "light": "./res/icon/refresh-light.svg"
                }
            },
            {
                "command": "_project.historyRecord",
                "title": "History Records",
                "icon": {
                    "dark": "./res/icon/Note_16x.svg",
                    "light": "./res/icon/Note_16x.svg"
                }
            },
            {
                "command": "_project.clearHistoryRecord",
                "title": "Clear History Records"
            },
            {
                "command": "_project.saveAll",
                "title": "Save All Projects",
                "icon": {
                    "dark": "./res/icon/SaveAll_16x.svg",
                    "light": "./res/icon/SaveAll_16x.svg"
                }
            },
            {
                "command": "_project.setActive",
                "title": "Active Project"
            },
            {
                "command": "eide.project.build",
                "category": "eide",
                "title": "Build",
                "icon": {
                    "dark": "./res/icon/BuildSelection_16x.svg",
                    "light": "./res/icon/BuildSelection_16x.svg"
                }
            },
            {
                "command": "eide.project.rebuild",
                "category": "eide",
                "title": "Rebuild",
                "icon": {
                    "dark": "./res/icon/BuildSolution_16x.svg",
                    "light": "./res/icon/BuildSolution_16x.svg"
                }
            },
            {
                "command": "eide.project.clean",
                "category": "eide",
                "title": "Clean",
                "icon": {
                    "dark": "./res/icon/clean_dark_16x.svg",
                    "light": "./res/icon/clean_light_16x.svg"
                }
            },
            {
                "command": "eide.project.uploadToDevice",
                "title": "Upload Program To Device",
                "category": "eide",
                "icon": {
                    "dark": "./res/icon/TransferDownload_16x.svg",
                    "light": "./res/icon/TransferDownload_16x.svg"
                }
            },
            {
                "command": "_project.showBuildParams",
                "title": "Show Compiler CommandLine"
            },
            {
                "command": "_project.installCMSISHeaders",
                "title": "Install CMSIS Header Files",
                "icon": {
                    "dark": "./res/icon/AddBuildQueue_16x.svg",
                    "light": "./res/icon/AddBuildQueue_16x.svg"
                }
            },
            {
                "command": "_project.addSrcDir",
                "title": "Add Source Folders",
                "icon": {
                    "dark": "./res/icon/AddFolder_16x.svg",
                    "light": "./res/icon/AddFolder_16x.svg"
                }
            },
            {
                "command": "_project.removeSrcDir",
                "title": "Remove This Source Folder",
                "icon": {
                    "dark": "./res/icon/TestCoveredFailing_16x.svg",
                    "light": "./res/icon/TestCoveredFailing_16x.svg"
                }
            },
            {
                "command": "_project.close",
                "title": "Close",
                "icon": {
                    "dark": "./res/icon/TestCoveredFailing_16x.svg",
                    "light": "./res/icon/TestCoveredFailing_16x.svg"
                }
            },
            {
                "command": "_project.addPackage",
                "title": "Install Chip Support Package",
                "icon": {
                    "dark": "./res/icon/Add_16xMD.svg",
                    "light": "./res/icon/Add_16xMD.svg"
                }
            },
            {
                "command": "_project.removePackage",
                "title": "Uninstall This Chip Support Package",
                "icon": {
                    "dark": "./res/icon/TestCoveredFailing_16x.svg",
                    "light": "./res/icon/TestCoveredFailing_16x.svg"
                }
            },
            {
                "command": "_project.setDevice",
                "title": "Choose Device",
                "icon": {
                    "dark": "./res/icon/FieldAdded_16x.svg",
                    "light": "./res/icon/FieldAdded_16x.svg"
                }
            },
            {
                "command": "_project.exportXml",
                "title": "Export To Keil Project",
                "icon": {
                    "dark": "./res/icon/ExportFile_16x.svg",
                    "light": "./res/icon/ExportFile_16x.svg"
                }
            },
            {
                "command": "_project.modifyCompileConfig",
                "title": "Modify",
                "icon": {
                    "dark": "./res/icon/Pen4_16x.svg",
                    "light": "./res/icon/Pen4_16x.svg"
                }
            },
            {
                "command": "_project.switchToolchain",
                "title": "Choose Toolchain",
                "icon": {
                    "dark": "./res/icon/SwitchSourceOrTarget_16x.svg",
                    "light": "./res/icon/SwitchSourceOrTarget_16x.svg"
                }
            },
            {
                "command": "_project.switchUploader",
                "title": "Choose Flasher",
                "icon": {
                    "dark": "./res/icon/SwitchSourceOrTarget_16x.svg",
                    "light": "./res/icon/SwitchSourceOrTarget_16x.svg"
                }
            },
            {
                "command": "_project.modifyUploadConfig",
                "title": "Modify",
                "icon": {
                    "dark": "./res/icon/Pen4_16x.svg",
                    "light": "./res/icon/Pen4_16x.svg"
                }
            },
            {
                "command": "_project.modifyOtherSettings",
                "title": "Modify",
                "icon": {
                    "dark": "./res/icon/Pen4_16x.svg",
                    "light": "./res/icon/Pen4_16x.svg"
                }
            },
            {
                "command": "_project.addIncludeDir",
                "title": "Add Include Folder",
                "icon": {
                    "dark": "./res/icon/Add_16xMD.svg",
                    "light": "./res/icon/Add_16xMD.svg"
                }
            },
            {
                "command": "_project.addLibDir",
                "title": "Add Library Search Paths",
                "icon": {
                    "dark": "./res/icon/Add_16xMD.svg",
                    "light": "./res/icon/Add_16xMD.svg"
                }
            },
            {
                "command": "_project.addDefine",
                "title": "Add Macros",
                "icon": {
                    "dark": "./res/icon/Add_16xMD.svg",
                    "light": "./res/icon/Add_16xMD.svg"
                }
            },
            {
                "command": "_project.showIncludeDir",
                "title": "Display All Include Paths",
                "icon": {
                    "dark": "./res/icon/eye_16x_dark.svg",
                    "light": "./res/icon/eye_16x.svg"
                }
            },
            {
                "command": "_project.showLibDir",
                "title": "Display All Library Paths",
                "icon": {
                    "dark": "./res/icon/eye_16x_dark.svg",
                    "light": "./res/icon/eye_16x.svg"
                }
            },
            {
                "command": "_project.showDefine",
                "title": "Display All Macros",
                "icon": {
                    "dark": "./res/icon/eye_16x_dark.svg",
                    "light": "./res/icon/eye_16x.svg"
                }
            },
            {
                "command": "_project.excludeSource",
                "title": "Exclude This File",
                "icon": {
                    "dark": "./res/icon/StatusNo_16x.svg",
                    "light": "./res/icon/StatusNo_16x.svg"
                }
            },
            {
                "command": "_project.unexcludeSource",
                "title": "Include This File",
                "icon": {
                    "dark": "./res/icon/Add_16xMD.svg",
                    "light": "./res/icon/Add_16xMD.svg"
                }
            },
            {
                "command": "_project.excludeFolder",
                "title": "Exclude This Folder",
                "icon": {
                    "dark": "./res/icon/StatusNo_16x.svg",
                    "light": "./res/icon/StatusNo_16x.svg"
                }
            },
            {
                "command": "_project.unexcludeFolder",
                "title": "Include This Folder",
                "icon": {
                    "dark": "./res/icon/Add_16xMD.svg",
                    "light": "./res/icon/Add_16xMD.svg"
                }
            },
            {
                "command": "_project.removeDependenceItem",
                "title": "Remove This Item",
                "icon": {
                    "dark": "./res/icon/TestCoveredFailing_16x.svg",
                    "light": "./res/icon/TestCoveredFailing_16x.svg"
                }
            },
            {
                "command": "_project.importDependenceFromPack",
                "title": "Install This Component",
                "icon": {
                    "dark": "./res/icon/AddToCollection_16x.svg",
                    "light": "./res/icon/AddToCollection_16x.svg"
                }
            },
            {
                "command": "_project.removeDependenceFromPack",
                "title": "Remove This Component",
                "icon": {
                    "dark": "./res/icon/TestCoveredFailing_16x.svg",
                    "light": "./res/icon/TestCoveredFailing_16x.svg"
                }
            },
            {
                "command": "_project.copyItemValue",
                "title": "Copy Item Value",
                "icon": {
                    "dark": "./res/icon/CopyToClipboard_16x.svg",
                    "light": "./res/icon/CopyToClipboard_16x.svg"
                }
            },
            {
                "command": "_project.switchMode",
                "title": "Switch Target",
                "icon": {
                    "dark": "./res/icon/SwitchSourceOrTarget_16x.svg",
                    "light": "./res/icon/SwitchSourceOrTarget_16x.svg"
                }
            },
            {
                "command": "_project.exportAsTemplate",
                "title": "Export To EIDE Template",
                "icon": {
                    "dark": "./res/icon/TableToFile_16x.svg",
                    "light": "./res/icon/TableToFile_16x.svg"
                }
            },
            {
                "command": "eide.ShowUUID",
                "category": "eide",
                "title": "Show UUID"
            },
            {
                "command": "eide.c51ToSdcc",
                "category": "eide",
                "title": "Convert Keil_C51 Registers To SDCC Format"
            },
            {
                "command": "eide.ReloadJlinkDevs",
                "category": "eide",
                "title": "Reload JLink Devices List"
            },
            {
                "command": "eide.ReloadStm8Devs",
                "category": "eide",
                "title": "Reload STM8 Devices List"
            }
        ],
        "keybindings": [
            {
                "command": "eide.project.uploadToDevice",
                "key": "ctrl+alt+d"
            },
            {
                "command": "eide.project.rebuild",
                "key": "ctrl+alt+f7"
            },
            {
                "command": "eide.project.build",
                "key": "f7",
                "when": "!isInDiffEditor"
            }
        ],
        "menus": {
            "editor/title": [
                {
                    "when": "cl.eide.projectActived && config.EIDE.Option.ShowToolbarInEditerTitle",
                    "command": "eide.project.build",
                    "group": "navigation"
                },
                {
                    "when": "cl.eide.projectActived && config.EIDE.Option.ShowToolbarInEditerTitle",
                    "command": "eide.project.clean",
                    "group": "navigation"
                },
                {
                    "when": "cl.eide.projectActived && config.EIDE.Option.ShowToolbarInEditerTitle",
                    "command": "eide.project.uploadToDevice",
                    "group": "navigation"
                }
            ],
            "editor/context": [
                {
                    "command": "eide.c51ToSdcc",
                    "group": "commands"
                }
            ],
            "view/title": [
                {
                    "command": "_project.refresh",
                    "group": "navigation",
                    "when": "view == Project"
                },
                {
                    "command": "_project.historyRecord",
                    "group": "navigation",
                    "when": "view == Operation"
                },
                {
                    "command": "_project.clearHistoryRecord",
                    "when": "view == Operation"
                },
                {
                    "command": "_project.saveAll",
                    "group": "navigation",
                    "when": "view == Project"
                }
            ],
            "view/item/context": [
                {
                    "command": "_project.source.filesystem_folder_add_file",
                    "when": "viewItem == FOLDER || viewItem == FOLDER_ROOT && view == Project"
                },
                {
                    "command": "_project.source.filesystem_folder_add",
                    "when": "viewItem == FOLDER || viewItem == FOLDER_ROOT && view == Project"
                },
                {
                    "command": "_project.source.virtual_folder_add_file",
                    "when": "viewItem == V_FOLDER_ROOT || viewItem == V_FOLDER || viewItem == V_EXCFOLDER && view == Project"
                },
                {
                    "command": "_project.source.virtual_folder_add",
                    "when": "viewItem == V_FOLDER_ROOT || viewItem == V_FOLDER || viewItem == V_EXCFOLDER && view == Project"
                },
                {
                    "command": "_project.source.virtual_folder_remove",
                    "when": "viewItem == V_FOLDER_ROOT || viewItem == V_FOLDER || viewItem == V_EXCFOLDER && view == Project"
                },
                {
                    "command": "_project.source.virtual_folder_rename",
                    "when": "viewItem == V_FOLDER_ROOT || viewItem == V_FOLDER || viewItem == V_EXCFOLDER && view == Project"
                },
                {
                    "command": "_project.source.virtual_file_remove",
                    "when": "viewItem == V_FILE_ITEM || viewItem == V_EXCFILE_ITEM && view == Project"
                },
                {
                    "command": "_project.addPackage",
                    "group": "inline",
                    "when": "viewItem == PACK && view == Project"
                },
                {
                    "command": "_project.removePackage",
                    "group": "inline",
                    "when": "viewItem == PACK_GROUP && view == Project"
                },
                {
                    "command": "_project.setDevice",
                    "group": "inline",
                    "when": "viewItem == PACK_GROUP && view == Project"
                },
                {
                    "command": "_project.addPackage",
                    "when": "viewItem == PACK && view == Project"
                },
                {
                    "command": "_project.installCMSISHeaders",
                    "when": "viewItem == PACK && view == Project"
                },
                {
                    "command": "_project.setActive",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "_project.switchMode",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "_project.exportAsTemplate",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "_project.exportXml",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "eide.project.rebuild",
                    "group": "inline",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "eide.project.build",
                    "group": "inline",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "eide.project.clean",
                    "group": "inline",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "_project.showBuildParams",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "eide.project.uploadToDevice",
                    "group": "inline",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "_project.close",
                    "when": "viewItem == SOLUTION && view == Project"
                },
                {
                    "command": "_project.excludeSource",
                    "group": "inline",
                    "when": "viewItem == FILE_ITEM || viewItem == V_FILE_ITEM && view == Project"
                },
                {
                    "command": "_project.unexcludeSource",
                    "group": "inline",
                    "when": "viewItem == EXCFILE_ITEM || viewItem == V_EXCFILE_ITEM && view == Project"
                },
                {
                    "command": "_project.excludeFolder",
                    "group": "inline",
                    "when": "viewItem == FOLDER || viewItem == V_FOLDER || viewItem == V_FOLDER_ROOT && view == Project"
                },
                {
                    "command": "_project.unexcludeFolder",
                    "group": "inline",
                    "when": "viewItem == EXCFOLDER || viewItem == V_EXCFOLDER && view == Project"
                },
                {
                    "command": "_project.addSrcDir",
                    "group": "inline",
                    "when": "viewItem == PROJECT && view == Project"
                },
                {
                    "command": "_project.addSrcDir",
                    "when": "viewItem == PROJECT && view == Project"
                },
                {
                    "command": "_project.sourceRoot.refresh",
                    "group": "inline",
                    "when": "viewItem == FOLDER_ROOT_DEPS || viewItem == FOLDER_ROOT || viewItem == V_FOLDER_ROOT && view == Project"
                },
                {
                    "command": "_project.removeSrcDir",
                    "group": "inline",
                    "when": "viewItem == FOLDER_ROOT && view == Project"
                },
                {
                    "command": "_project.switchToolchain",
                    "group": "inline",
                    "when": "viewItem == COMPILE_CONFIGURATION && view == Project"
                },
                {
                    "command": "_project.switchUploader",
                    "group": "inline",
                    "when": "viewItem == UPLOAD_OPTION_C51 || viewItem == UPLOAD_OPTION"
                },
                {
                    "command": "_project.modifyCompileConfig",
                    "group": "inline",
                    "when": "viewItem == COMPILE_CONFIGURATION_ITEM && view == Project"
                },
                {
                    "command": "_project.modifyUploadConfig",
                    "group": "inline",
                    "when": "viewItem == UPLOAD_OPTION_ITEM && view == Project"
                },
                {
                    "command": "_project.modifyOtherSettings",
                    "group": "inline",
                    "when": "viewItem == SETTINGS_ITEM && view == Project"
                },
                {
                    "command": "_project.addIncludeDir",
                    "group": "inline",
                    "when": "viewItem == INC_GROUP && view == Project"
                },
                {
                    "command": "_project.showIncludeDir",
                    "group": "inline",
                    "when": "viewItem == INC_GROUP && view == Project"
                },
                {
                    "command": "_project.addLibDir",
                    "group": "inline",
                    "when": "viewItem == LIB_GROUP && view == Project"
                },
                {
                    "command": "_project.showLibDir",
                    "group": "inline",
                    "when": "viewItem == LIB_GROUP && view == Project"
                },
                {
                    "command": "_project.addDefine",
                    "group": "inline",
                    "when": "viewItem == DEFINE_GROUP && view == Project"
                },
                {
                    "command": "_project.showDefine",
                    "group": "inline",
                    "when": "viewItem == DEFINE_GROUP && view == Project"
                },
                {
                    "command": "_project.removeDependenceItem",
                    "group": "inline",
                    "when": "viewItem == INC_ITEM || viewItem == DEFINE_ITEM || viewItem == LIB_ITEM || viewItem == SOURCE_ITEM && view == Project"
                },
                {
                    "command": "_project.copyItemValue",
                    "group": "inline",
                    "when": "viewItem == EXCFILE_ITEM || viewItem == FILE_ITEM || viewItem == ITEM || viewItem == DEPENDENCE_ITEM || viewItem == INC_ITEM || viewItem == DEFINE_ITEM || viewItem == LIB_ITEM || viewItem == SOURCE_ITEM && view == Project"
                },
                {
                    "command": "_project.importDependenceFromPack",
                    "group": "inline",
                    "when": "viewItem == COMPONENT_GROUP && view == Project"
                },
                {
                    "command": "_project.removeDependenceFromPack",
                    "group": "inline",
                    "when": "viewItem == ACTIVED_GROUP && view == Project"
                }
            ]
        },
        "snippets": [
            {
                "language": "a51",
                "path": "./lang/a51.snippets.json"
            }
        ],
        "languages": [
            {
                "id": "eide-output",
                "mimetypes": [
                    "text/x-code-output"
                ]
            },
            {
                "id": "a51",
                "aliases": [
                    "A51",
                    "8051 Assembly"
                ],
                "extensions": [
                    ".a51",
                    ".A51"
                ],
                "filenamePatterns": [
                    "**/*.a51",
                    "**/*.A51"
                ],
                "configuration": "./lang/a51.language-configuration.json"
            }
        ],
        "jsonValidation": [
            {
                "fileMatch": "**/*.flash.json",
                "url": "./lang/stc.flash.verify.json"
            },
            {
                "fileMatch": "**/*.options.keil.json",
                "url": "./lang/8051.keil.verify.json"
            },
            {
                "fileMatch": "**/*.sdcc.json",
                "url": "./lang/sdcc.verify.json"
            },
            {
                "fileMatch": "**/*.options.v5.json",
                "url": "./lang/arm.v5.verify.json"
            },
            {
                "fileMatch": "**/*.options.v6.json",
                "url": "./lang/arm.v6.verify.json"
            },
            {
                "fileMatch": "**/*.options.gcc.json",
                "url": "./lang/arm.gcc.verify.json"
            },
            {
                "fileMatch": "**/*.stm8.iar.json",
                "url": "./lang/stm8.iar.verify.json"
            },
            {
                "fileMatch": "**/*riscv.gcc.options.json",
                "url": "./lang/riscv.gcc.verify.json"
            }
        ],
        "grammars": [
            {
                "language": "eide-output",
                "scopeName": "eide.output",
                "path": "./lang/eide-output.tmLanguage.json"
            },
            {
                "language": "a51",
                "scopeName": "source.asm.a51",
                "path": "./lang/a51.tmLanguage.json"
            }
        ],
        "problemMatchers": [
            {
                "name": "armcc",
                "fileLocation": "autoDetect",
                "pattern": [
                    {
                        "regexp": "^\"*([^\"]+)\"*, line (\\d+): (Error|Warning):\\s*(.+): (.+)$",
                        "file": 1,
                        "line": 2,
                        "severity": 3,
                        "code": 4,
                        "message": 5
                    }
                ]
            },
            {
                "name": "gcc",
                "fileLocation": "autoDetect",
                "pattern": [
                    {
                        "regexp": "^(.+):(\\d+):(\\d+):\\s+(\\w+):\\s+(.*)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "severity": 4,
                        "message": 5
                    }
                ]
            }
        ]
    }
}