###############################################
#
#	CONFIGURATION FILE FOR STM8 COMPILER
#
###############################################

##############
# global args
##############

###################
# default defines
###################

#
-m debug:x			            # debug: produce debug info
-m nobss:,bss                   # nobss: do not use bss
-m nocst:,ct                    # nocst: constants in code
-m nocross:,nc                  # nocross: functions do not cross boundaries
-m rev:rb			            # rev: reverse bit field order
-m strict:ck                    # strict: enhance type checking
-m split:,sf                    # split: functions in different sections
-m proto:p			            # proto: enable prototype checking
-m compact:dNOINLINE,,f7,,fast  # compact: factorize code
-m fast:,i,s,,compact           # fast: inline long transferts
-m warn:w1                      # warn: enable warnings

#
-m mods:hmods.h,fl,,,modsl  # stack model
-m modsl:hmodsl.h,fl,,,mods	# stack long model

#
-m mods0:hmods0.h,,,,modsl0	    # stack model 64K
-m modsl0:hmodsl0.h,,,,mods0    # stack long model 64K

################
# gcc like args
################

# model
-m model-small:hmods.h,fl,,,model-large             # Stack Short model. Variables are in short range memory but pointers are pointing to long range memory.
-m model-large:hmodsl.h,fl,,,model-small            # Stack Long mode. Variables and pointers are in and pointing to long range memory.
-m model-small-small:hmods0.h,,,,model-large-small  # Stack Short model for application smaller than 64K. Variables are in short range memory but pointers are pointing to long range memory.
-m model-large-small:hmodsl0.h,,,,model-small-small # Stack Long model for application smaller than 64K. Variables and pointers are in and pointing to long range memory.

# lang
-m c99:c99,,,, # c99 type behaviour

# optimize
-m Ofast:,i,s,,Osize
-m Osize:dNOINLINE,,f7,,Ofast
-m ffunction-sections:,sf
-m fdata-sections:,,,,

# other
-m pack-local-bits:pb,,,,
-m unsigned-chars:u,,,,
-m no-bss:,bss
-m const-in-code:,ct # constants in code

# message
-m Wall:w7,,,,
-m Wless:w1,,,,
-m Wnormal:w4,,,,

-m MD:md,,,md,

##############################################################
# All Options Of Compilers (From CXSTM8_UsersGuide.pdf)
##############################################################

# cxstm8 [options] <files>
#     -a*> assembler options
#     -ce* path for errors
#     -cl* path for listings
#     -co* path for objects
#     -d*> define symbol
#     -e create error file
#     -ec all C files
#     -eg eclipse error messages
#     -ep preprocess assembler files
#     -es all assembler files
#     -ex* prefix executables
#     -f* configuration file
#     -g*> code generator options
#     -i*> path for include
#     -l create listing
#     -no do not use optimizer
#     -o*> optimizer options
#     -p*> parser options
#     -s create only assembler file
#     -sm create only dependencies
#     -sp create only preprocessor file
#     -t* path for temporary files
#     -v verbose
#     -x do not execute
#     +*> select compiler options

# cpstm8 [options] file
#     -ad expand defines in assembly
#     -c99 c99 type behaviour
#     -cc do not cast const expressions
#     -ck extra type checkings
#     -cp no constant propagation
#     -csb check signed bitfields
#     -d*> define symbol=value
#     -e run preprocessor only
#     +e* error file name
#     -ge eclipse error messages
#     -h*> include header
#     -i*> include path
#     -ku keep unused static
#     -l output line information
#     -md make dependencies
#     -m# model configuration
#     -nb no bitfield packing
#     -nc no const replacement
#     -ne no enum optimization
#     -ni no include recursion
#     -np allow pointer narrowing
#     -ns do not share locals
#     -o* output file name
#     -p need prototypes
#     -pb pack bit variables
#     -rb reverse bitfield order
#     -s do not reorder locals
#     -sa strict ANSI conformance
#     -u plain char is unsigned
#     -wp warn unknown pragmas
#     -w# enable warnings
#     -xd debug info for data
#     -xf full path in debug info
#     -xp no path in debug info
#     -xu no debug info if unused
#     -xx extended debug info
#     -x output debug info

# cgstm8 [options] file
#     -a optimize _asm code
#     -bss do not use bss
#     -ck check stack frame
#     -ct constants in code
#     -dl# output line information
#     -dp no divide protection
#     +e* error file name
#     -f full listing display
#     -fl far library calls
#     -ge eclipse error messages
#     -i inline long machine calls
#     -l output listing
#     -na do not xdef alias name
#     -nc functions do not cross section
#     -no do not use optimizer
#     -nc functions do not cross section
#     -o* output file name
#     -sf split function sections
#     -v verbose

# costm8 [options] <file>
#     -c keep original lines as comments
#     -d* disable specific optimizations
#     -f# minimum code factorization
#     -o* output file name
#     -s enable speed optimizations
#     -v print efficiency statistics

# castm8 [options] <files>
#     -a absolute assembler
#     -b do not optimizes branches
#     -c output cross reference
#     -d*> define symbol=value
#     +e* error file name
#     -ff use formfeed in listing
#     -ft force title in listing
#     -f# fill byte value
#     -ge eclipse error messages
#     -h* include header
#     -i*> include path
#     -l output listing
#     +l* listing file name
#     -m accept old syntax
#     -md make dependencies
#     -mi accept label syntax
#     -o* output file name
#     -pe all equates public
#     -p all symbols public
#     -pl keep local symbol
#     -si suppress .info. section
#     -u undefined in listing
#     -v be verbose
#     -x include line debug info
#     -xp no path in debug info
#     -xx include full debug info

# clnk [options] <file.lkf> [<files>]
#     -bs# bank size
#     -e* error file name
#     -ge eclipse error messages
#     -l*> library path
#     -m* map file name
#     -o* output file name
#     -p phys addr in map
#     -s symbol table only
#     -sa sort symbol by address
#     -si suppress .info. segment
#     -sl output local symbols
#     -u# display unused symbols
#     -v verbose
